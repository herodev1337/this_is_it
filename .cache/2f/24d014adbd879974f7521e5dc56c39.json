{"id":"CayF","dependencies":[{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js.map","includedInParent":true,"mtime":1638179017265},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\src\\split.tsx","includedInParent":true,"mtime":1638179019786},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\package.json","includedInParent":true,"mtime":1639131934758},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\package.json","includedInParent":true,"mtime":1638179016110},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\.babelrc","includedInParent":true,"mtime":1638178998248},{"name":"./editorOptions","loc":{"line":29,"column":30},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\editorOptions.js"},{"name":"ace-builds","loc":{"line":31,"column":27},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\ace-builds\\src-noconflict\\ace.js"},{"name":"ace-builds/src-noconflict/ext-split","loc":{"line":32,"column":26},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\ace-builds\\src-noconflict\\ext-split.js"},{"name":"prop-types","loc":{"line":33,"column":24},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\prop-types\\index.js"},{"name":"react","loc":{"line":34,"column":20},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react\\index.js"},{"name":"lodash.isequal","loc":{"line":35,"column":22},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\lodash.isequal\\index.js"},{"name":"lodash.get","loc":{"line":36,"column":18},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\lodash.get\\index.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editorOptions_1 = require(\"./editorOptions\");\nvar ace = (0, editorOptions_1.getAceInstance)();\nvar ace_builds_1 = require(\"ace-builds\");\nvar ext_split_1 = require(\"ace-builds/src-noconflict/ext-split\");\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar isEqual = require(\"lodash.isequal\");\nvar get = require(\"lodash.get\");\nvar SplitComponent = /** @class */ (function (_super) {\n    __extends(SplitComponent, _super);\n    function SplitComponent(props) {\n        var _this = _super.call(this, props) || this;\n        editorOptions_1.editorEvents.forEach(function (method) {\n            _this[method] = _this[method].bind(_this);\n        });\n        _this.debounce = editorOptions_1.debounce;\n        return _this;\n    }\n    SplitComponent.prototype.isInShadow = function (node) {\n        var parent = node && node.parentNode;\n        while (parent) {\n            if (parent.toString() === \"[object ShadowRoot]\") {\n                return true;\n            }\n            parent = parent.parentNode;\n        }\n        return false;\n    };\n    SplitComponent.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, onBeforeLoad = _a.onBeforeLoad, mode = _a.mode, focus = _a.focus, theme = _a.theme, fontSize = _a.fontSize, value = _a.value, defaultValue = _a.defaultValue, cursorStart = _a.cursorStart, showGutter = _a.showGutter, wrapEnabled = _a.wrapEnabled, showPrintMargin = _a.showPrintMargin, _b = _a.scrollMargin, scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b, keyboardHandler = _a.keyboardHandler, onLoad = _a.onLoad, commands = _a.commands, annotations = _a.annotations, markers = _a.markers, splits = _a.splits;\n        this.editor = ace.edit(this.refEditor);\n        if (this.isInShadow(this.refEditor)) {\n            this.editor.renderer.attachToShadowRoot();\n        }\n        this.editor.setTheme(\"ace/theme/\" + theme);\n        if (onBeforeLoad) {\n            onBeforeLoad(ace);\n        }\n        var editorProps = Object.keys(this.props.editorProps);\n        var split = new ext_split_1.Split(this.editor.container, \"ace/theme/\" + theme, splits);\n        this.editor.env.split = split;\n        this.splitEditor = split.getEditor(0);\n        this.split = split;\n        // in a split scenario we don't want a print margin for the entire application\n        this.editor.setShowPrintMargin(false);\n        this.editor.renderer.setShowGutter(false);\n        // get a list of possible options to avoid 'misspelled option errors'\n        var availableOptions = this.splitEditor.$options;\n        if (this.props.debounceChangePeriod) {\n            this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n        }\n        split.forEach(function (editor, index) {\n            for (var i = 0; i < editorProps.length; i++) {\n                editor[editorProps[i]] = _this.props.editorProps[editorProps[i]];\n            }\n            var defaultValueForEditor = get(defaultValue, index);\n            var valueForEditor = get(value, index, \"\");\n            editor.session.setUndoManager(new ace.UndoManager());\n            editor.setTheme(\"ace/theme/\" + theme);\n            editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n            editor.getSession().setMode(\"ace/mode/\" + mode);\n            editor.setFontSize(fontSize);\n            editor.renderer.setShowGutter(showGutter);\n            editor.getSession().setUseWrapMode(wrapEnabled);\n            editor.setShowPrintMargin(showPrintMargin);\n            editor.on(\"focus\", _this.onFocus);\n            editor.on(\"blur\", _this.onBlur);\n            editor.on(\"input\", _this.onInput);\n            editor.on(\"copy\", _this.onCopy);\n            editor.on(\"paste\", _this.onPaste);\n            editor.on(\"change\", _this.onChange);\n            editor\n                .getSession()\n                .selection.on(\"changeSelection\", _this.onSelectionChange);\n            editor.getSession().selection.on(\"changeCursor\", _this.onCursorChange);\n            editor.session.on(\"changeScrollTop\", _this.onScroll);\n            editor.setValue(defaultValueForEditor === undefined\n                ? valueForEditor\n                : defaultValueForEditor, cursorStart);\n            var newAnnotations = get(annotations, index, []);\n            var newMarkers = get(markers, index, []);\n            editor.getSession().setAnnotations(newAnnotations);\n            if (newMarkers && newMarkers.length > 0) {\n                _this.handleMarkers(newMarkers, editor);\n            }\n            for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n                var option = editorOptions_1.editorOptions[i];\n                if (availableOptions.hasOwnProperty(option)) {\n                    editor.setOption(option, _this.props[option]);\n                }\n                else if (_this.props[option]) {\n                    console.warn(\"ReaceAce: editor option \" + option + \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\");\n                }\n            }\n            _this.handleOptions(_this.props, editor);\n            if (Array.isArray(commands)) {\n                commands.forEach(function (command) {\n                    if (typeof command.exec === \"string\") {\n                        editor.commands.bindKey(command.bindKey, command.exec);\n                    }\n                    else {\n                        editor.commands.addCommand(command);\n                    }\n                });\n            }\n            if (keyboardHandler) {\n                editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n            }\n        });\n        if (className) {\n            this.refEditor.className += \" \" + className;\n        }\n        if (focus) {\n            this.splitEditor.focus();\n        }\n        var sp = this.editor.env.split;\n        sp.setOrientation(this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE);\n        sp.resize(true);\n        if (onLoad) {\n            onLoad(sp);\n        }\n    };\n    SplitComponent.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        var oldProps = prevProps;\n        var nextProps = this.props;\n        var split = this.editor.env.split;\n        if (nextProps.splits !== oldProps.splits) {\n            split.setSplits(nextProps.splits);\n        }\n        if (nextProps.orientation !== oldProps.orientation) {\n            split.setOrientation(nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE);\n        }\n        split.forEach(function (editor, index) {\n            if (nextProps.mode !== oldProps.mode) {\n                editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n            }\n            if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n                if (nextProps.keyboardHandler) {\n                    editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n                }\n                else {\n                    editor.setKeyboardHandler(null);\n                }\n            }\n            if (nextProps.fontSize !== oldProps.fontSize) {\n                editor.setFontSize(nextProps.fontSize);\n            }\n            if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n                editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n            }\n            if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n                editor.setShowPrintMargin(nextProps.showPrintMargin);\n            }\n            if (nextProps.showGutter !== oldProps.showGutter) {\n                editor.renderer.setShowGutter(nextProps.showGutter);\n            }\n            for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n                var option = editorOptions_1.editorOptions[i];\n                if (nextProps[option] !== oldProps[option]) {\n                    editor.setOption(option, nextProps[option]);\n                }\n            }\n            if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n                _this.handleOptions(nextProps, editor);\n            }\n            var nextValue = get(nextProps.value, index, \"\");\n            if (editor.getValue() !== nextValue) {\n                // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n                _this.silent = true;\n                var pos = editor.session.selection.toJSON();\n                editor.setValue(nextValue, nextProps.cursorStart);\n                editor.session.selection.fromJSON(pos);\n                _this.silent = false;\n            }\n            var newAnnotations = get(nextProps.annotations, index, []);\n            var oldAnnotations = get(oldProps.annotations, index, []);\n            if (!isEqual(newAnnotations, oldAnnotations)) {\n                editor.getSession().setAnnotations(newAnnotations);\n            }\n            var newMarkers = get(nextProps.markers, index, []);\n            var oldMarkers = get(oldProps.markers, index, []);\n            if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n                _this.handleMarkers(newMarkers, editor);\n            }\n        });\n        if (nextProps.className !== oldProps.className) {\n            var appliedClasses = this.refEditor.className;\n            var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n            var oldClassesArray = oldProps.className.trim().split(\" \");\n            oldClassesArray.forEach(function (oldClass) {\n                var index = appliedClassesArray_1.indexOf(oldClass);\n                appliedClassesArray_1.splice(index, 1);\n            });\n            this.refEditor.className =\n                \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n        }\n        if (nextProps.theme !== oldProps.theme) {\n            split.setTheme(\"ace/theme/\" + nextProps.theme);\n        }\n        if (nextProps.focus && !oldProps.focus) {\n            this.splitEditor.focus();\n        }\n        if (nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width) {\n            this.editor.resize();\n        }\n    };\n    SplitComponent.prototype.componentWillUnmount = function () {\n        this.editor.destroy();\n        this.editor = null;\n    };\n    SplitComponent.prototype.onChange = function (event) {\n        if (this.props.onChange && !this.silent) {\n            var value_1 = [];\n            this.editor.env.split.forEach(function (editor) {\n                value_1.push(editor.getValue());\n            });\n            this.props.onChange(value_1, event);\n        }\n    };\n    SplitComponent.prototype.onSelectionChange = function (event) {\n        if (this.props.onSelectionChange) {\n            var value_2 = [];\n            this.editor.env.split.forEach(function (editor) {\n                value_2.push(editor.getSelection());\n            });\n            this.props.onSelectionChange(value_2, event);\n        }\n    };\n    SplitComponent.prototype.onCursorChange = function (event) {\n        if (this.props.onCursorChange) {\n            var value_3 = [];\n            this.editor.env.split.forEach(function (editor) {\n                value_3.push(editor.getSelection());\n            });\n            this.props.onCursorChange(value_3, event);\n        }\n    };\n    SplitComponent.prototype.onFocus = function (event) {\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    };\n    SplitComponent.prototype.onInput = function (event) {\n        if (this.props.onInput) {\n            this.props.onInput(event);\n        }\n    };\n    SplitComponent.prototype.onBlur = function (event) {\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    };\n    SplitComponent.prototype.onCopy = function (text) {\n        if (this.props.onCopy) {\n            this.props.onCopy(text);\n        }\n    };\n    SplitComponent.prototype.onPaste = function (text) {\n        if (this.props.onPaste) {\n            this.props.onPaste(text);\n        }\n    };\n    SplitComponent.prototype.onScroll = function () {\n        if (this.props.onScroll) {\n            this.props.onScroll(this.editor);\n        }\n    };\n    SplitComponent.prototype.handleOptions = function (props, editor) {\n        var setOptions = Object.keys(props.setOptions);\n        for (var y = 0; y < setOptions.length; y++) {\n            editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n        }\n    };\n    SplitComponent.prototype.handleMarkers = function (markers, editor) {\n        // remove foreground markers\n        var currentMarkers = editor.getSession().getMarkers(true);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i)) {\n                editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // remove background markers\n        currentMarkers = editor.getSession().getMarkers(false);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i)) {\n                editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // add new markers\n        markers.forEach(function (_a) {\n            var startRow = _a.startRow, startCol = _a.startCol, endRow = _a.endRow, endCol = _a.endCol, className = _a.className, type = _a.type, _b = _a.inFront, inFront = _b === void 0 ? false : _b;\n            var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n            editor\n                .getSession()\n                .addMarker(range, className, type, inFront);\n        });\n    };\n    SplitComponent.prototype.updateRef = function (item) {\n        this.refEditor = item;\n    };\n    SplitComponent.prototype.render = function () {\n        var _a = this.props, name = _a.name, width = _a.width, height = _a.height, style = _a.style;\n        var divStyle = __assign({ width: width, height: height }, style);\n        return React.createElement(\"div\", { ref: this.updateRef, id: name, style: divStyle });\n    };\n    SplitComponent.propTypes = {\n        className: PropTypes.string,\n        debounceChangePeriod: PropTypes.number,\n        defaultValue: PropTypes.arrayOf(PropTypes.string),\n        focus: PropTypes.bool,\n        fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        height: PropTypes.string,\n        mode: PropTypes.string,\n        name: PropTypes.string,\n        onBlur: PropTypes.func,\n        onChange: PropTypes.func,\n        onCopy: PropTypes.func,\n        onFocus: PropTypes.func,\n        onInput: PropTypes.func,\n        onLoad: PropTypes.func,\n        onPaste: PropTypes.func,\n        onScroll: PropTypes.func,\n        orientation: PropTypes.string,\n        showGutter: PropTypes.bool,\n        splits: PropTypes.number,\n        theme: PropTypes.string,\n        value: PropTypes.arrayOf(PropTypes.string),\n        width: PropTypes.string,\n        onSelectionChange: PropTypes.func,\n        onCursorChange: PropTypes.func,\n        onBeforeLoad: PropTypes.func,\n        minLines: PropTypes.number,\n        maxLines: PropTypes.number,\n        readOnly: PropTypes.bool,\n        highlightActiveLine: PropTypes.bool,\n        tabSize: PropTypes.number,\n        showPrintMargin: PropTypes.bool,\n        cursorStart: PropTypes.number,\n        editorProps: PropTypes.object,\n        setOptions: PropTypes.object,\n        style: PropTypes.object,\n        scrollMargin: PropTypes.array,\n        annotations: PropTypes.array,\n        markers: PropTypes.array,\n        keyboardHandler: PropTypes.string,\n        wrapEnabled: PropTypes.bool,\n        enableBasicAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        enableLiveAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        commands: PropTypes.array\n    };\n    SplitComponent.defaultProps = {\n        name: \"ace-editor\",\n        focus: false,\n        orientation: \"beside\",\n        splits: 2,\n        mode: \"\",\n        theme: \"\",\n        height: \"500px\",\n        width: \"500px\",\n        value: [],\n        fontSize: 12,\n        showGutter: true,\n        onChange: null,\n        onPaste: null,\n        onLoad: null,\n        onScroll: null,\n        minLines: null,\n        maxLines: null,\n        readOnly: false,\n        highlightActiveLine: true,\n        showPrintMargin: true,\n        tabSize: 4,\n        cursorStart: 1,\n        editorProps: {},\n        style: {},\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        wrapEnabled: false,\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false\n    };\n    return SplitComponent;\n}(React.Component));\nexports.default = SplitComponent;\n"},"sourceMaps":{"js":{"version":3,"file":"split.js","sourceRoot":"","sources":["../src/split.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\nimport { Ace, Range } from \"ace-builds\";\nimport Editor = Ace.Editor;\nimport { Split } from \"ace-builds/src-noconflict/ext-split\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nconst get = require(\"lodash.get\");\nimport {\n  IAceOptions,\n  IAnnotation,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n\ninterface IAceEditorClass extends Editor {\n  [index: string]: any;\n  $options?: any;\n}\n\nexport interface ISplitEditorProps {\n  [index: string]: any;\n  name?: string;\n  style?: object;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  splits: number;\n  debounceChangePeriod?: number;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string[];\n  defaultValue?: string[];\n  scrollMargin?: number[];\n  orientation?: string;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: IEditorProps) => void;\n  onBeforeLoad?: (ace: any) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (value: Event) => void;\n  onBlur?: (value: Event) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: IAnnotation[][];\n  markers?: IMarker[][];\n}\n\nexport default class SplitComponent extends React.Component<\n  ISplitEditorProps,\n  undefined\n> {\n  [index: string]: any;\n\n  public static propTypes: PropTypes.ValidationMap<ISplitEditorProps> = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    commands: PropTypes.array\n  };\n  public static defaultProps: Partial<ISplitEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  public editor: IAceEditorClass;\n  public refEditor: HTMLElement;\n  public silent: boolean;\n  public split: IAceEditorClass;\n  public splitEditor: IAceEditorClass;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  constructor(props: ISplitEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      value,\n      defaultValue,\n      cursorStart,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      splits\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor);\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor.setTheme(`ace/theme/${theme}`);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n\n    const split = new Split(\n      this.editor.container,\n      `ace/theme/${theme}`,\n      splits\n    );\n    this.editor.env.split = split;\n\n    this.splitEditor = split.getEditor(0);\n    this.split = split;\n    // in a split scenario we don't want a print margin for the entire application\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false);\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.splitEditor.$options;\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      for (let i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n      }\n      const defaultValueForEditor = get(defaultValue, index);\n      const valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(`ace/theme/${theme}`);\n      editor.renderer.setScrollMargin(\n        scrollMargin[0],\n        scrollMargin[1],\n        scrollMargin[2],\n        scrollMargin[3]\n      );\n      editor.getSession().setMode(`ace/mode/${mode}`);\n      editor.setFontSize(fontSize as any);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", this.onFocus);\n      editor.on(\"blur\", this.onBlur);\n      editor.on(\"input\" as any, this.onInput);\n      editor.on(\"copy\", this.onCopy as any);\n      editor.on(\"paste\", this.onPaste as any);\n      editor.on(\"change\", this.onChange);\n      editor\n        .getSession()\n        .selection.on(\"changeSelection\", this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", this.onScroll);\n      editor.setValue(\n        defaultValueForEditor === undefined\n          ? valueForEditor\n          : defaultValueForEditor,\n        cursorStart\n      );\n      const newAnnotations = get(annotations, index, []);\n      const newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n      if (newMarkers && newMarkers.length > 0) {\n        this.handleMarkers(newMarkers, editor);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option as any, this.props[option]);\n        } else if (this.props[option]) {\n          console.warn(\n            `ReaceAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n          );\n        }\n      }\n      this.handleOptions(this.props, editor);\n\n      if (Array.isArray(commands)) {\n        commands.forEach(command => {\n          if (typeof command.exec === \"string\") {\n            (editor.commands as any).bindKey(command.bindKey, command.exec);\n          } else {\n            (editor.commands as any).addCommand(command);\n          }\n        });\n      }\n\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (focus) {\n      this.splitEditor.focus();\n    }\n\n    const sp = this.editor.env.split;\n    sp.setOrientation(\n      this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE\n    );\n    sp.resize(true);\n    if (onLoad) {\n      onLoad(sp);\n    }\n  }\n\n  public componentDidUpdate(prevProps: ISplitEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    const split = this.editor.env.split;\n\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(\n        nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE\n      );\n    }\n\n    split.forEach((editor: IAceEditorClass, index: number) => {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\n            \"ace/keyboard/\" + nextProps.keyboardHandler\n          );\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize as any);\n      }\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n\n      for (let i = 0; i < editorOptions.length; i++) {\n        const option = editorOptions[i];\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option as any, nextProps[option]);\n        }\n      }\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        this.handleOptions(nextProps, editor);\n      }\n      const nextValue = get(nextProps.value, index, \"\");\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        this.silent = true;\n        const pos = (editor.session.selection as any).toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        (editor.session.selection as any).fromJSON(pos);\n        this.silent = false;\n      }\n      const newAnnotations = get(nextProps.annotations, index, []);\n      const oldAnnotations = get(oldProps.annotations, index, []);\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n\n      const newMarkers = get(nextProps.markers, index, []);\n      const oldMarkers = get(oldProps.markers, index, []);\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        this.handleMarkers(newMarkers, editor);\n      }\n    });\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n    if (\n      nextProps.height !== this.props.height ||\n      nextProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.editor.destroy();\n    this.editor = null;\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getValue());\n      });\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value: any = [];\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\n        value.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  }\n\n  public onInput(event: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  }\n\n  public onCopy(text: string) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste(text: string) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: ISplitEditorProps, editor: IAceEditorClass) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y] as any, props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[], editor: IAceEditorClass) {\n    // remove foreground markers\n    let currentMarkers = editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers\n    currentMarkers = editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        editor\n          .getSession()\n          .addMarker(range as any, className, type as any, inFront);\n      }\n    );\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n"]}},"error":null,"hash":"a9bf6eee9ed24ee9c67804e28630bd4e","cacheData":{"env":{}}}