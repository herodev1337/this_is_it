{"id":"kbXp","dependencies":[{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\ace.js.map","includedInParent":true,"mtime":1638179016858},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\src\\ace.tsx","includedInParent":true,"mtime":1638179019650},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\package.json","includedInParent":true,"mtime":1639131934758},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\package.json","includedInParent":true,"mtime":1638179016110},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\.babelrc","includedInParent":true,"mtime":1638178998248},{"name":"ace-builds","loc":{"line":29,"column":27},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\ace.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\ace-builds\\src-noconflict\\ace.js"},{"name":"prop-types","loc":{"line":30,"column":24},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\ace.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\prop-types\\index.js"},{"name":"react","loc":{"line":31,"column":20},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\ace.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react\\index.js"},{"name":"lodash.isequal","loc":{"line":32,"column":22},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\ace.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\lodash.isequal\\index.js"},{"name":"./editorOptions","loc":{"line":33,"column":30},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\ace.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\editorOptions.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ace_builds_1 = require(\"ace-builds\");\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar isEqual = require(\"lodash.isequal\");\nvar editorOptions_1 = require(\"./editorOptions\");\nvar ace = (0, editorOptions_1.getAceInstance)();\nvar ReactAce = /** @class */ (function (_super) {\n    __extends(ReactAce, _super);\n    function ReactAce(props) {\n        var _this = _super.call(this, props) || this;\n        editorOptions_1.editorEvents.forEach(function (method) {\n            _this[method] = _this[method].bind(_this);\n        });\n        _this.debounce = editorOptions_1.debounce;\n        return _this;\n    }\n    ReactAce.prototype.isInShadow = function (node) {\n        var parent = node && node.parentNode;\n        while (parent) {\n            if (parent.toString() === \"[object ShadowRoot]\") {\n                return true;\n            }\n            parent = parent.parentNode;\n        }\n        return false;\n    };\n    ReactAce.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, onBeforeLoad = _a.onBeforeLoad, onValidate = _a.onValidate, mode = _a.mode, focus = _a.focus, theme = _a.theme, fontSize = _a.fontSize, value = _a.value, defaultValue = _a.defaultValue, showGutter = _a.showGutter, wrapEnabled = _a.wrapEnabled, showPrintMargin = _a.showPrintMargin, _b = _a.scrollMargin, scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b, keyboardHandler = _a.keyboardHandler, onLoad = _a.onLoad, commands = _a.commands, annotations = _a.annotations, markers = _a.markers, placeholder = _a.placeholder;\n        this.editor = ace.edit(this.refEditor);\n        if (onBeforeLoad) {\n            onBeforeLoad(ace);\n        }\n        var editorProps = Object.keys(this.props.editorProps);\n        for (var i = 0; i < editorProps.length; i++) {\n            this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n        }\n        if (this.props.debounceChangePeriod) {\n            this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n        }\n        this.editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n        if (this.isInShadow(this.refEditor)) {\n            this.editor.renderer.attachToShadowRoot();\n        }\n        this.editor\n            .getSession()\n            .setMode(typeof mode === \"string\" ? \"ace/mode/\" + mode : mode);\n        if (theme && theme !== \"\")\n            this.editor.setTheme(\"ace/theme/\" + theme);\n        this.editor.setFontSize(typeof fontSize === \"number\" ? fontSize + \"px\" : fontSize);\n        this.editor\n            .getSession()\n            .setValue(!defaultValue ? value || \"\" : defaultValue);\n        if (this.props.navigateToFileEnd) {\n            this.editor.navigateFileEnd();\n        }\n        this.editor.renderer.setShowGutter(showGutter);\n        this.editor.getSession().setUseWrapMode(wrapEnabled);\n        this.editor.setShowPrintMargin(showPrintMargin);\n        this.editor.on(\"focus\", this.onFocus);\n        this.editor.on(\"blur\", this.onBlur);\n        this.editor.on(\"copy\", this.onCopy);\n        this.editor.on(\"paste\", this.onPaste);\n        this.editor.on(\"change\", this.onChange);\n        this.editor.on(\"input\", this.onInput);\n        if (placeholder) {\n            this.updatePlaceholder();\n        }\n        this.editor\n            .getSession()\n            .selection.on(\"changeSelection\", this.onSelectionChange);\n        this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n        if (onValidate) {\n            // @ts-ignore types don't include\n            this.editor.getSession().on(\"changeAnnotation\", function () {\n                // tslint:disable-next-line:no-shadowed-variable\n                var annotations = _this.editor.getSession().getAnnotations();\n                _this.props.onValidate(annotations);\n            });\n        }\n        this.editor.session.on(\"changeScrollTop\", this.onScroll);\n        this.editor.getSession().setAnnotations(annotations || []);\n        if (markers && markers.length > 0) {\n            this.handleMarkers(markers);\n        }\n        // get a list of possible options to avoid 'misspelled option errors'\n        var availableOptions = this.editor.$options;\n        editorOptions_1.editorOptions.forEach(function (option) {\n            if (availableOptions.hasOwnProperty(option)) {\n                // @ts-ignore\n                _this.editor.setOption(option, _this.props[option]);\n            }\n            else if (_this.props[option]) {\n                console.warn(\"ReactAce: editor option \" + option + \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\");\n            }\n        });\n        this.handleOptions(this.props);\n        if (Array.isArray(commands)) {\n            commands.forEach(function (command) {\n                if (typeof command.exec === \"string\") {\n                    _this.editor.commands.bindKey(command.bindKey, command.exec);\n                }\n                else {\n                    _this.editor.commands.addCommand(command);\n                }\n            });\n        }\n        if (keyboardHandler) {\n            this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n        }\n        if (className) {\n            this.refEditor.className += \" \" + className;\n        }\n        if (onLoad) {\n            onLoad(this.editor);\n        }\n        this.editor.resize();\n        if (focus) {\n            this.editor.focus();\n        }\n    };\n    ReactAce.prototype.componentDidUpdate = function (prevProps) {\n        var oldProps = prevProps;\n        var nextProps = this.props;\n        for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n            var option = editorOptions_1.editorOptions[i];\n            if (nextProps[option] !== oldProps[option]) {\n                // @ts-ignore\n                this.editor.setOption(option, nextProps[option]);\n            }\n        }\n        if (nextProps.className !== oldProps.className) {\n            var appliedClasses = this.refEditor.className;\n            var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n            var oldClassesArray = oldProps.className.trim().split(\" \");\n            oldClassesArray.forEach(function (oldClass) {\n                var index = appliedClassesArray_1.indexOf(oldClass);\n                appliedClassesArray_1.splice(index, 1);\n            });\n            this.refEditor.className =\n                \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n        }\n        // First process editor value, as it may create a new session (see issue #300)\n        if (this.editor &&\n            nextProps.value != null &&\n            this.editor.getValue() !== nextProps.value) {\n            // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n            this.silent = true;\n            var pos = this.editor.session.selection.toJSON();\n            this.editor.setValue(nextProps.value, nextProps.cursorStart);\n            this.editor.session.selection.fromJSON(pos);\n            this.silent = false;\n        }\n        if (nextProps.placeholder !== oldProps.placeholder) {\n            this.updatePlaceholder();\n        }\n        if (nextProps.mode !== oldProps.mode) {\n            this.editor\n                .getSession()\n                .setMode(typeof nextProps.mode === \"string\"\n                ? \"ace/mode/\" + nextProps.mode\n                : nextProps.mode);\n        }\n        if (nextProps.theme !== oldProps.theme) {\n            this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n        }\n        if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n            if (nextProps.keyboardHandler) {\n                this.editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n            }\n            else {\n                this.editor.setKeyboardHandler(null);\n            }\n        }\n        if (nextProps.fontSize !== oldProps.fontSize) {\n            this.editor.setFontSize(typeof nextProps.fontSize === \"number\"\n                ? nextProps.fontSize + \"px\"\n                : nextProps.fontSize);\n        }\n        if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n            this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n        }\n        if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n            this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n        }\n        if (nextProps.showGutter !== oldProps.showGutter) {\n            this.editor.renderer.setShowGutter(nextProps.showGutter);\n        }\n        if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n            this.handleOptions(nextProps);\n        }\n        if (!isEqual(nextProps.annotations, oldProps.annotations)) {\n            this.editor.getSession().setAnnotations(nextProps.annotations || []);\n        }\n        if (!isEqual(nextProps.markers, oldProps.markers) &&\n            Array.isArray(nextProps.markers)) {\n            this.handleMarkers(nextProps.markers);\n        }\n        // this doesn't look like it works at all....\n        if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n            this.handleScrollMargins(nextProps.scrollMargin);\n        }\n        if (prevProps.height !== this.props.height ||\n            prevProps.width !== this.props.width) {\n            this.editor.resize();\n        }\n        if (this.props.focus && !prevProps.focus) {\n            this.editor.focus();\n        }\n    };\n    ReactAce.prototype.handleScrollMargins = function (margins) {\n        if (margins === void 0) { margins = [0, 0, 0, 0]; }\n        this.editor.renderer.setScrollMargin(margins[0], margins[1], margins[2], margins[3]);\n    };\n    ReactAce.prototype.componentWillUnmount = function () {\n        this.editor.destroy();\n        this.editor = null;\n    };\n    ReactAce.prototype.onChange = function (event) {\n        if (this.props.onChange && !this.silent) {\n            var value = this.editor.getValue();\n            this.props.onChange(value, event);\n        }\n    };\n    ReactAce.prototype.onSelectionChange = function (event) {\n        if (this.props.onSelectionChange) {\n            var value = this.editor.getSelection();\n            this.props.onSelectionChange(value, event);\n        }\n    };\n    ReactAce.prototype.onCursorChange = function (event) {\n        if (this.props.onCursorChange) {\n            var value = this.editor.getSelection();\n            this.props.onCursorChange(value, event);\n        }\n    };\n    ReactAce.prototype.onInput = function (event) {\n        if (this.props.onInput) {\n            this.props.onInput(event);\n        }\n        if (this.props.placeholder) {\n            this.updatePlaceholder();\n        }\n    };\n    ReactAce.prototype.onFocus = function (event) {\n        if (this.props.onFocus) {\n            this.props.onFocus(event, this.editor);\n        }\n    };\n    ReactAce.prototype.onBlur = function (event) {\n        if (this.props.onBlur) {\n            this.props.onBlur(event, this.editor);\n        }\n    };\n    ReactAce.prototype.onCopy = function (_a) {\n        var text = _a.text;\n        if (this.props.onCopy) {\n            this.props.onCopy(text);\n        }\n    };\n    ReactAce.prototype.onPaste = function (_a) {\n        var text = _a.text;\n        if (this.props.onPaste) {\n            this.props.onPaste(text);\n        }\n    };\n    ReactAce.prototype.onScroll = function () {\n        if (this.props.onScroll) {\n            this.props.onScroll(this.editor);\n        }\n    };\n    ReactAce.prototype.handleOptions = function (props) {\n        var setOptions = Object.keys(props.setOptions);\n        for (var y = 0; y < setOptions.length; y++) {\n            // @ts-ignore\n            this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n        }\n    };\n    ReactAce.prototype.handleMarkers = function (markers) {\n        var _this = this;\n        // remove foreground markers\n        var currentMarkers = this.editor.getSession().getMarkers(true);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i)) {\n                this.editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // remove background markers except active line marker and selected word marker\n        currentMarkers = this.editor.getSession().getMarkers(false);\n        for (var i in currentMarkers) {\n            if (currentMarkers.hasOwnProperty(i) &&\n                currentMarkers[i].clazz !== \"ace_active-line\" &&\n                currentMarkers[i].clazz !== \"ace_selected-word\") {\n                this.editor.getSession().removeMarker(currentMarkers[i].id);\n            }\n        }\n        // add new markers\n        markers.forEach(function (_a) {\n            var startRow = _a.startRow, startCol = _a.startCol, endRow = _a.endRow, endCol = _a.endCol, className = _a.className, type = _a.type, _b = _a.inFront, inFront = _b === void 0 ? false : _b;\n            var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n            _this.editor.getSession().addMarker(range, className, type, inFront);\n        });\n    };\n    ReactAce.prototype.updatePlaceholder = function () {\n        // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n        var editor = this.editor;\n        var placeholder = this.props.placeholder;\n        var showPlaceholder = !editor.session.getValue().length;\n        var node = editor.renderer.placeholderNode;\n        if (!showPlaceholder && node) {\n            editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n            editor.renderer.placeholderNode = null;\n        }\n        else if (showPlaceholder && !node) {\n            node = editor.renderer.placeholderNode = document.createElement(\"div\");\n            node.textContent = placeholder || \"\";\n            node.className = \"ace_comment ace_placeholder\";\n            node.style.padding = \"0 9px\";\n            node.style.position = \"absolute\";\n            node.style.zIndex = \"3\";\n            editor.renderer.scroller.appendChild(node);\n        }\n        else if (showPlaceholder && node) {\n            node.textContent = placeholder;\n        }\n    };\n    ReactAce.prototype.updateRef = function (item) {\n        this.refEditor = item;\n    };\n    ReactAce.prototype.render = function () {\n        var _a = this.props, name = _a.name, width = _a.width, height = _a.height, style = _a.style;\n        var divStyle = __assign({ width: width, height: height }, style);\n        return React.createElement(\"div\", { ref: this.updateRef, id: name, style: divStyle });\n    };\n    ReactAce.propTypes = {\n        mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n        focus: PropTypes.bool,\n        theme: PropTypes.string,\n        name: PropTypes.string,\n        className: PropTypes.string,\n        height: PropTypes.string,\n        width: PropTypes.string,\n        fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        showGutter: PropTypes.bool,\n        onChange: PropTypes.func,\n        onCopy: PropTypes.func,\n        onPaste: PropTypes.func,\n        onFocus: PropTypes.func,\n        onInput: PropTypes.func,\n        onBlur: PropTypes.func,\n        onScroll: PropTypes.func,\n        value: PropTypes.string,\n        defaultValue: PropTypes.string,\n        onLoad: PropTypes.func,\n        onSelectionChange: PropTypes.func,\n        onCursorChange: PropTypes.func,\n        onBeforeLoad: PropTypes.func,\n        onValidate: PropTypes.func,\n        minLines: PropTypes.number,\n        maxLines: PropTypes.number,\n        readOnly: PropTypes.bool,\n        highlightActiveLine: PropTypes.bool,\n        tabSize: PropTypes.number,\n        showPrintMargin: PropTypes.bool,\n        cursorStart: PropTypes.number,\n        debounceChangePeriod: PropTypes.number,\n        editorProps: PropTypes.object,\n        setOptions: PropTypes.object,\n        style: PropTypes.object,\n        scrollMargin: PropTypes.array,\n        annotations: PropTypes.array,\n        markers: PropTypes.array,\n        keyboardHandler: PropTypes.string,\n        wrapEnabled: PropTypes.bool,\n        enableSnippets: PropTypes.bool,\n        enableBasicAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        enableLiveAutocompletion: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.array\n        ]),\n        navigateToFileEnd: PropTypes.bool,\n        commands: PropTypes.array,\n        placeholder: PropTypes.string\n    };\n    ReactAce.defaultProps = {\n        name: \"ace-editor\",\n        focus: false,\n        mode: \"\",\n        theme: \"\",\n        height: \"500px\",\n        width: \"500px\",\n        fontSize: 12,\n        enableSnippets: false,\n        showGutter: true,\n        onChange: null,\n        onPaste: null,\n        onLoad: null,\n        onScroll: null,\n        minLines: null,\n        maxLines: null,\n        readOnly: false,\n        highlightActiveLine: true,\n        showPrintMargin: true,\n        tabSize: 4,\n        cursorStart: 1,\n        editorProps: {},\n        style: {},\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        wrapEnabled: false,\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        placeholder: null,\n        navigateToFileEnd: true\n    };\n    return ReactAce;\n}(React.Component));\nexports.default = ReactAce;\n"},"sourceMaps":{"js":{"version":3,"file":"ace.js","sourceRoot":"","sources":["../src/ace.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Ace, Range } from \"ace-builds\";\nimport * as AceBuilds from \"ace-builds\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nconst isEqual = require(\"lodash.isequal\");\nimport {\n  debounce,\n  editorEvents,\n  editorOptions,\n  getAceInstance\n} from \"./editorOptions\";\nconst ace = getAceInstance();\n\nimport {\n  IAceEditor,\n  IAceOptions,\n  ICommand,\n  IEditorProps,\n  IMarker\n} from \"./types\";\n/**\n * See https://github.com/ajaxorg/ace/wiki/Configuring-Ace\n */\n\nexport interface IAceEditorProps {\n  name?: string;\n  style?: React.CSSProperties;\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\n  mode?: string | object;\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\n  theme?: string;\n  height?: string;\n  width?: string;\n  className?: string;\n  fontSize?: number | string;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  highlightActiveLine?: boolean;\n  focus?: boolean;\n  cursorStart?: number;\n  wrapEnabled?: boolean;\n  readOnly?: boolean;\n  minLines?: number;\n  maxLines?: number;\n  navigateToFileEnd?: boolean;\n  debounceChangePeriod?: number;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  tabSize?: number;\n  value?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  scrollMargin?: number[];\n  enableSnippets?: boolean;\n  onSelectionChange?: (value: any, event?: any) => void;\n  onCursorChange?: (value: any, event?: any) => void;\n  onInput?: (event?: any) => void;\n  onLoad?: (editor: Ace.Editor) => void;\n  onValidate?: (annotations: Ace.Annotation[]) => void;\n  onBeforeLoad?: (ace: typeof AceBuilds) => void;\n  onChange?: (value: string, event?: any) => void;\n  onSelection?: (selectedText: string, event?: any) => void;\n  onCopy?: (value: string) => void;\n  onPaste?: (value: string) => void;\n  onFocus?: (event: any, editor?: Ace.Editor) => void;\n  onBlur?: (event: any, editor?: Ace.Editor) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  editorProps?: IEditorProps;\n  setOptions?: IAceOptions;\n  keyboardHandler?: string;\n  commands?: ICommand[];\n  annotations?: Ace.Annotation[];\n  markers?: IMarker[];\n}\n\nexport default class ReactAce extends React.Component<IAceEditorProps> {\n  public static propTypes: PropTypes.ValidationMap<IAceEditorProps> = {\n    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    focus: PropTypes.bool,\n    theme: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    height: PropTypes.string,\n    width: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    showGutter: PropTypes.bool,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onPaste: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onBlur: PropTypes.func,\n    onScroll: PropTypes.func,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    onLoad: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    onValidate: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    debounceChangePeriod: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableSnippets: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    enableLiveAutocompletion: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.array\n    ]),\n    navigateToFileEnd: PropTypes.bool,\n    commands: PropTypes.array,\n    placeholder: PropTypes.string\n  };\n  public static defaultProps: Partial<IAceEditorProps> = {\n    name: \"ace-editor\",\n    focus: false,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    fontSize: 12,\n    enableSnippets: false,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    placeholder: null,\n    navigateToFileEnd: true\n  };\n  public editor: IAceEditor;\n  public refEditor: HTMLElement;\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\n  // [index: string]: any;\n  public silent: boolean;\n  constructor(props: IAceEditorProps) {\n    super(props);\n    editorEvents.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n    this.debounce = debounce;\n  }\n  public isInShadow(node: HTMLElement): boolean {\n    let parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  }\n  public componentDidMount() {\n    const {\n      className,\n      onBeforeLoad,\n      onValidate,\n      mode,\n      focus,\n      theme,\n      fontSize,\n      value,\n      defaultValue,\n      showGutter,\n      wrapEnabled,\n      showPrintMargin,\n      scrollMargin = [0, 0, 0, 0],\n      keyboardHandler,\n      onLoad,\n      commands,\n      annotations,\n      markers,\n      placeholder\n    } = this.props;\n\n    this.editor = ace.edit(this.refEditor);\n\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n\n    const editorProps = Object.keys(this.props.editorProps);\n    for (let i = 0; i < editorProps.length; i++) {\n      this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n    }\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(\n        this.onChange,\n        this.props.debounceChangePeriod\n      );\n    }\n    this.editor.renderer.setScrollMargin(\n      scrollMargin[0],\n      scrollMargin[1],\n      scrollMargin[2],\n      scrollMargin[3]\n    );\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor\n      .getSession()\n      .setMode(\n        typeof mode === \"string\" ? `ace/mode/${mode}` : (mode as Ace.SyntaxMode)\n      );\n    if(theme && theme !== \"\")\n      this.editor.setTheme(`ace/theme/${theme}`);\n    this.editor.setFontSize(\n      typeof fontSize === \"number\" ? `${fontSize}px` : fontSize\n    );\n    this.editor\n      .getSession()\n      .setValue(!defaultValue ? value || \"\" : defaultValue);\n\n    if (this.props.navigateToFileEnd) {\n      this.editor.navigateFileEnd();\n    }\n    this.editor.renderer.setShowGutter(showGutter);\n    this.editor.getSession().setUseWrapMode(wrapEnabled);\n    this.editor.setShowPrintMargin(showPrintMargin);\n    this.editor.on(\"focus\", this.onFocus);\n    this.editor.on(\"blur\", this.onBlur);\n    this.editor.on(\"copy\", this.onCopy);\n    this.editor.on(\"paste\", this.onPaste);\n    this.editor.on(\"change\", this.onChange);\n    this.editor.on(\"input\", this.onInput);\n    if (placeholder) {\n      this.updatePlaceholder();\n    }\n    this.editor\n      .getSession()\n      .selection.on(\"changeSelection\", this.onSelectionChange);\n    this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n    if (onValidate) {\n      // @ts-ignore types don't include\n      this.editor.getSession().on(\"changeAnnotation\", () => {\n        // tslint:disable-next-line:no-shadowed-variable\n        const annotations = this.editor.getSession().getAnnotations();\n        this.props.onValidate(annotations);\n      });\n    }\n    this.editor.session.on(\"changeScrollTop\", this.onScroll);\n    this.editor.getSession().setAnnotations(annotations || []);\n    if (markers && markers.length > 0) {\n      this.handleMarkers(markers);\n    }\n\n    // get a list of possible options to avoid 'misspelled option errors'\n    const availableOptions = this.editor.$options;\n    editorOptions.forEach(option => {\n      if (availableOptions.hasOwnProperty(option)) {\n        // @ts-ignore\n        this.editor.setOption(option, this.props[option]);\n      } else if (this.props[option]) {\n        console.warn(\n          `ReactAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\n        );\n      }\n    });\n\n    this.handleOptions(this.props);\n\n    if (Array.isArray(commands)) {\n      commands.forEach(command => {\n        if (typeof command.exec === \"string\") {\n          (this.editor.commands as any).bindKey(command.bindKey, command.exec);\n        } else {\n          (this.editor.commands as any).addCommand(command);\n        }\n      });\n    }\n\n    if (keyboardHandler) {\n      this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n    }\n\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n\n    if (onLoad) {\n      onLoad(this.editor);\n    }\n\n    this.editor.resize();\n\n    if (focus) {\n      this.editor.focus();\n    }\n  }\n\n  public componentDidUpdate(prevProps: IAceEditorProps) {\n    const oldProps = prevProps;\n    const nextProps = this.props;\n\n    for (let i = 0; i < editorOptions.length; i++) {\n      const option = editorOptions[i];\n      if (nextProps[option] !== oldProps[option]) {\n        // @ts-ignore\n        this.editor.setOption(option, nextProps[option]);\n      }\n    }\n\n    if (nextProps.className !== oldProps.className) {\n      const appliedClasses = this.refEditor.className;\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\n      const oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(oldClass => {\n        const index = appliedClassesArray.indexOf(oldClass);\n        appliedClassesArray.splice(index, 1);\n      });\n      this.refEditor.className =\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\n    }\n\n    // First process editor value, as it may create a new session (see issue #300)\n    if (\n      this.editor &&\n      nextProps.value != null &&\n      this.editor.getValue() !== nextProps.value\n    ) {\n      // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n      this.silent = true;\n      const pos = this.editor.session.selection.toJSON();\n      this.editor.setValue(nextProps.value, nextProps.cursorStart);\n      this.editor.session.selection.fromJSON(pos);\n      this.silent = false;\n    }\n\n    if (nextProps.placeholder !== oldProps.placeholder) {\n      this.updatePlaceholder();\n    }\n    if (nextProps.mode !== oldProps.mode) {\n      this.editor\n        .getSession()\n        .setMode(\n          typeof nextProps.mode === \"string\"\n            ? `ace/mode/${nextProps.mode}`\n            : (nextProps.mode as Ace.SyntaxMode)\n        );\n    }\n    if (nextProps.theme !== oldProps.theme) {\n      this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n      if (nextProps.keyboardHandler) {\n        this.editor.setKeyboardHandler(\n          \"ace/keyboard/\" + nextProps.keyboardHandler\n        );\n      } else {\n        this.editor.setKeyboardHandler(null);\n      }\n    }\n    if (nextProps.fontSize !== oldProps.fontSize) {\n      this.editor.setFontSize(\n        typeof nextProps.fontSize === \"number\"\n          ? `${nextProps.fontSize}px`\n          : nextProps.fontSize\n      );\n    }\n    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n      this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n    }\n    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n      this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n    }\n    if (nextProps.showGutter !== oldProps.showGutter) {\n      this.editor.renderer.setShowGutter(nextProps.showGutter);\n    }\n    if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n      this.handleOptions(nextProps);\n    }\n    if (!isEqual(nextProps.annotations, oldProps.annotations)) {\n      this.editor.getSession().setAnnotations(nextProps.annotations || []);\n    }\n    if (\n      !isEqual(nextProps.markers, oldProps.markers) &&\n      Array.isArray(nextProps.markers)\n    ) {\n      this.handleMarkers(nextProps.markers);\n    }\n\n    // this doesn't look like it works at all....\n    if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n      this.handleScrollMargins(nextProps.scrollMargin);\n    }\n\n    if (\n      prevProps.height !== this.props.height ||\n      prevProps.width !== this.props.width\n    ) {\n      this.editor.resize();\n    }\n    if (this.props.focus && !prevProps.focus) {\n      this.editor.focus();\n    }\n  }\n\n  public handleScrollMargins(margins = [0, 0, 0, 0]) {\n    this.editor.renderer.setScrollMargin(\n      margins[0],\n      margins[1],\n      margins[2],\n      margins[3]\n    );\n  }\n\n  public componentWillUnmount() {\n    this.editor.destroy();\n    this.editor = null;\n  }\n\n  public onChange(event: any) {\n    if (this.props.onChange && !this.silent) {\n      const value = this.editor.getValue();\n      this.props.onChange(value, event);\n    }\n  }\n\n  public onSelectionChange(event: any) {\n    if (this.props.onSelectionChange) {\n      const value = this.editor.getSelection();\n      this.props.onSelectionChange(value, event);\n    }\n  }\n  public onCursorChange(event: any) {\n    if (this.props.onCursorChange) {\n      const value = this.editor.getSelection();\n      this.props.onCursorChange(value, event);\n    }\n  }\n  public onInput(event?: any) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n    if (this.props.placeholder) {\n      this.updatePlaceholder();\n    }\n  }\n  public onFocus(event: any) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event, this.editor);\n    }\n  }\n\n  public onBlur(event: any) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, this.editor);\n    }\n  }\n\n  public onCopy({ text }: { text: string }) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  }\n\n  public onPaste({ text }: { text: string }) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  }\n\n  public onScroll() {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  }\n\n  public handleOptions(props: IAceEditorProps) {\n    const setOptions = Object.keys(props.setOptions);\n    for (let y = 0; y < setOptions.length; y++) {\n      // @ts-ignore\n      this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  }\n\n  public handleMarkers(markers: IMarker[]) {\n    // remove foreground markers\n    let currentMarkers = this.editor.getSession().getMarkers(true);\n    for (const i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers except active line marker and selected word marker\n    currentMarkers = this.editor.getSession().getMarkers(false);\n    for (const i in currentMarkers) {\n      if (\n        currentMarkers.hasOwnProperty(i) &&\n        currentMarkers[i].clazz !== \"ace_active-line\" &&\n        currentMarkers[i].clazz !== \"ace_selected-word\"\n      ) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(\n      ({\n        startRow,\n        startCol,\n        endRow,\n        endCol,\n        className,\n        type,\n        inFront = false\n      }) => {\n        const range = new Range(startRow, startCol, endRow, endCol);\n        this.editor.getSession().addMarker(range, className, type, inFront);\n      }\n    );\n  }\n\n  public updatePlaceholder() {\n    // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n\n    const editor = this.editor;\n    const { placeholder } = this.props;\n\n    const showPlaceholder = !editor.session.getValue().length;\n    let node = editor.renderer.placeholderNode;\n\n    if (!showPlaceholder && node) {\n      editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n      editor.renderer.placeholderNode = null;\n    } else if (showPlaceholder && !node) {\n      node = editor.renderer.placeholderNode = document.createElement(\"div\");\n      node.textContent = placeholder || \"\";\n      node.className = \"ace_comment ace_placeholder\";\n      node.style.padding = \"0 9px\";\n      node.style.position = \"absolute\";\n      node.style.zIndex = \"3\";\n      editor.renderer.scroller.appendChild(node);\n    } else if (showPlaceholder && node) {\n      node.textContent = placeholder;\n    }\n  }\n\n  public updateRef(item: HTMLElement) {\n    this.refEditor = item;\n  }\n\n  public render() {\n    const { name, width, height, style } = this.props;\n    const divStyle = { width, height, ...style };\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\n  }\n}\n"]}},"error":null,"hash":"e34c5a0a153ea796a2676c78d3ce2d76","cacheData":{"env":{}}}