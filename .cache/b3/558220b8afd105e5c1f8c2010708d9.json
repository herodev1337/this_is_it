{"id":"abOS","dependencies":[{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\diff.js.map","includedInParent":true,"mtime":1638179016958},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\src\\diff.tsx","includedInParent":true,"mtime":1638179019713},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\package.json","includedInParent":true,"mtime":1639131934758},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\package.json","includedInParent":true,"mtime":1638179016110},{"name":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\.babelrc","includedInParent":true,"mtime":1638178998248},{"name":"prop-types","loc":{"line":18,"column":24},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\diff.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\prop-types\\index.js"},{"name":"react","loc":{"line":19,"column":20},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\diff.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react\\index.js"},{"name":"./split","loc":{"line":20,"column":22},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\diff.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\split.js"},{"name":"diff-match-patch","loc":{"line":21,"column":29},"parent":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\react-ace\\lib\\diff.js","resolved":"C:\\Users\\farooq.singh\\OneDrive - SoftwareONE\\Desktop\\this_is_it\\client\\node_modules\\diff-match-patch\\index.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar split_1 = require(\"./split\");\nvar DiffMatchPatch = require(\"diff-match-patch\");\nvar DiffComponent = /** @class */ (function (_super) {\n    __extends(DiffComponent, _super);\n    function DiffComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            value: _this.props.value\n        };\n        _this.onChange = _this.onChange.bind(_this);\n        _this.diff = _this.diff.bind(_this);\n        return _this;\n    }\n    DiffComponent.prototype.componentDidUpdate = function () {\n        var value = this.props.value;\n        if (value !== this.state.value) {\n            this.setState({ value: value });\n        }\n    };\n    DiffComponent.prototype.onChange = function (value) {\n        this.setState({\n            value: value\n        });\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n    };\n    DiffComponent.prototype.diff = function () {\n        var dmp = new DiffMatchPatch();\n        var lhString = this.state.value[0];\n        var rhString = this.state.value[1];\n        if (lhString.length === 0 && rhString.length === 0) {\n            return [];\n        }\n        var diff = dmp.diff_main(lhString, rhString);\n        dmp.diff_cleanupSemantic(diff);\n        var diffedLines = this.generateDiffedLines(diff);\n        var codeEditorSettings = this.setCodeMarkers(diffedLines);\n        return codeEditorSettings;\n    };\n    DiffComponent.prototype.generateDiffedLines = function (diff) {\n        var C = {\n            DIFF_EQUAL: 0,\n            DIFF_DELETE: -1,\n            DIFF_INSERT: 1\n        };\n        var diffedLines = {\n            left: [],\n            right: []\n        };\n        var cursor = {\n            left: 1,\n            right: 1\n        };\n        diff.forEach(function (chunk) {\n            var chunkType = chunk[0];\n            var text = chunk[1];\n            var lines = text.split(\"\\n\").length - 1;\n            // diff-match-patch sometimes returns empty strings at random\n            if (text.length === 0) {\n                return;\n            }\n            var firstChar = text[0];\n            var lastChar = text[text.length - 1];\n            var linesToHighlight = 0;\n            switch (chunkType) {\n                case C.DIFF_EQUAL:\n                    cursor.left += lines;\n                    cursor.right += lines;\n                    break;\n                case C.DIFF_DELETE:\n                    // If the deletion starts with a newline, push the cursor down to that line\n                    if (firstChar === \"\\n\") {\n                        cursor.left++;\n                        lines--;\n                    }\n                    linesToHighlight = lines;\n                    // If the deletion does not include a newline, highlight the same line on the right\n                    if (linesToHighlight === 0) {\n                        diffedLines.right.push({\n                            startLine: cursor.right,\n                            endLine: cursor.right\n                        });\n                    }\n                    // If the last character is a newline, we don't want to highlight that line\n                    if (lastChar === \"\\n\") {\n                        linesToHighlight -= 1;\n                    }\n                    diffedLines.left.push({\n                        startLine: cursor.left,\n                        endLine: cursor.left + linesToHighlight\n                    });\n                    cursor.left += lines;\n                    break;\n                case C.DIFF_INSERT:\n                    // If the insertion starts with a newline, push the cursor down to that line\n                    if (firstChar === \"\\n\") {\n                        cursor.right++;\n                        lines--;\n                    }\n                    linesToHighlight = lines;\n                    // If the insertion does not include a newline, highlight the same line on the left\n                    if (linesToHighlight === 0) {\n                        diffedLines.left.push({\n                            startLine: cursor.left,\n                            endLine: cursor.left\n                        });\n                    }\n                    // If the last character is a newline, we don't want to highlight that line\n                    if (lastChar === \"\\n\") {\n                        linesToHighlight -= 1;\n                    }\n                    diffedLines.right.push({\n                        startLine: cursor.right,\n                        endLine: cursor.right + linesToHighlight\n                    });\n                    cursor.right += lines;\n                    break;\n                default:\n                    throw new Error(\"Diff type was not defined.\");\n            }\n        });\n        return diffedLines;\n    };\n    // Receives a collection of line numbers and iterates through them to highlight appropriately\n    // Returns an object that tells the render() method how to display the code editors\n    DiffComponent.prototype.setCodeMarkers = function (diffedLines) {\n        if (diffedLines === void 0) { diffedLines = { left: [], right: [] }; }\n        var codeEditorSettings = [];\n        var newMarkerSet = {\n            left: [],\n            right: []\n        };\n        for (var i = 0; i < diffedLines.left.length; i++) {\n            var markerObj = {\n                startRow: diffedLines.left[i].startLine - 1,\n                endRow: diffedLines.left[i].endLine,\n                type: \"text\",\n                className: \"codeMarker\"\n            };\n            newMarkerSet.left.push(markerObj);\n        }\n        for (var i = 0; i < diffedLines.right.length; i++) {\n            var markerObj = {\n                startRow: diffedLines.right[i].startLine - 1,\n                endRow: diffedLines.right[i].endLine,\n                type: \"text\",\n                className: \"codeMarker\"\n            };\n            newMarkerSet.right.push(markerObj);\n        }\n        codeEditorSettings[0] = newMarkerSet.left;\n        codeEditorSettings[1] = newMarkerSet.right;\n        return codeEditorSettings;\n    };\n    DiffComponent.prototype.render = function () {\n        var markers = this.diff();\n        return (React.createElement(split_1.default, { name: this.props.name, className: this.props.className, focus: this.props.focus, orientation: this.props.orientation, splits: this.props.splits, mode: this.props.mode, theme: this.props.theme, height: this.props.height, width: this.props.width, fontSize: this.props.fontSize, showGutter: this.props.showGutter, onChange: this.onChange, onPaste: this.props.onPaste, onLoad: this.props.onLoad, onScroll: this.props.onScroll, minLines: this.props.minLines, maxLines: this.props.maxLines, readOnly: this.props.readOnly, highlightActiveLine: this.props.highlightActiveLine, showPrintMargin: this.props.showPrintMargin, tabSize: this.props.tabSize, cursorStart: this.props.cursorStart, editorProps: this.props.editorProps, style: this.props.style, scrollMargin: this.props.scrollMargin, setOptions: this.props.setOptions, wrapEnabled: this.props.wrapEnabled, enableBasicAutocompletion: this.props.enableBasicAutocompletion, enableLiveAutocompletion: this.props.enableLiveAutocompletion, value: this.state.value, markers: markers }));\n    };\n    DiffComponent.propTypes = {\n        cursorStart: PropTypes.number,\n        editorProps: PropTypes.object,\n        enableBasicAutocompletion: PropTypes.bool,\n        enableLiveAutocompletion: PropTypes.bool,\n        focus: PropTypes.bool,\n        fontSize: PropTypes.number,\n        height: PropTypes.string,\n        highlightActiveLine: PropTypes.bool,\n        maxLines: PropTypes.number,\n        minLines: PropTypes.number,\n        mode: PropTypes.string,\n        name: PropTypes.string,\n        className: PropTypes.string,\n        onLoad: PropTypes.func,\n        onPaste: PropTypes.func,\n        onScroll: PropTypes.func,\n        onChange: PropTypes.func,\n        orientation: PropTypes.string,\n        readOnly: PropTypes.bool,\n        scrollMargin: PropTypes.array,\n        setOptions: PropTypes.object,\n        showGutter: PropTypes.bool,\n        showPrintMargin: PropTypes.bool,\n        splits: PropTypes.number,\n        style: PropTypes.object,\n        tabSize: PropTypes.number,\n        theme: PropTypes.string,\n        value: PropTypes.array,\n        width: PropTypes.string,\n        wrapEnabled: PropTypes.bool\n    };\n    DiffComponent.defaultProps = {\n        cursorStart: 1,\n        editorProps: {},\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        focus: false,\n        fontSize: 12,\n        height: \"500px\",\n        highlightActiveLine: true,\n        maxLines: null,\n        minLines: null,\n        mode: \"\",\n        name: \"ace-editor\",\n        onLoad: null,\n        onScroll: null,\n        onPaste: null,\n        onChange: null,\n        orientation: \"beside\",\n        readOnly: false,\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        showGutter: true,\n        showPrintMargin: true,\n        splits: 2,\n        style: {},\n        tabSize: 4,\n        theme: \"github\",\n        value: [\"\", \"\"],\n        width: \"500px\",\n        wrapEnabled: true\n    };\n    return DiffComponent;\n}(React.Component));\nexports.default = DiffComponent;\n"},"sourceMaps":{"js":{"version":3,"file":"diff.js","sourceRoot":"","sources":["../src/diff.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport SplitEditor from \"./split\";\nconst DiffMatchPatch = require(\"diff-match-patch\");\nimport { IEditorProps } from \"./types\";\n\nexport interface IDiffEditorProps {\n  cursorStart?: number;\n  editorProps?: object;\n  enableBasicAutocompletion?: boolean | string[];\n  enableLiveAutocompletion?: boolean | string[];\n  focus?: boolean;\n  fontSize?: number;\n  height?: string;\n  highlightActiveLine?: boolean;\n  maxLines?: number;\n  minLines?: number;\n  mode?: string;\n  name?: string;\n  className?: string;\n  onLoad?: (editor: IEditorProps) => void;\n  onChange?: (value: string[], event?: any) => void;\n  onPaste?: (value: string) => void;\n  onScroll?: (editor: IEditorProps) => void;\n  orientation?: string;\n  readOnly?: boolean;\n  scrollMargin?: number[];\n  setOptions?: object;\n  showGutter?: boolean;\n  showPrintMargin?: boolean;\n  splits?: number;\n  style?: object;\n  tabSize?: number;\n  theme?: string;\n  value?: string[];\n  width?: string;\n  wrapEnabled?: boolean;\n}\n\nexport interface IDiffEditorState {\n  value: string[];\n}\n\nexport default class DiffComponent extends React.Component<\n  IDiffEditorProps,\n  IDiffEditorState\n> {\n  public static propTypes: PropTypes.ValidationMap<IDiffEditorProps> = {\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    enableBasicAutocompletion: PropTypes.bool,\n    enableLiveAutocompletion: PropTypes.bool,\n    focus: PropTypes.bool,\n    fontSize: PropTypes.number,\n    height: PropTypes.string,\n    highlightActiveLine: PropTypes.bool,\n    maxLines: PropTypes.number,\n    minLines: PropTypes.number,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    onChange: PropTypes.func,\n    orientation: PropTypes.string,\n    readOnly: PropTypes.bool,\n    scrollMargin: PropTypes.array,\n    setOptions: PropTypes.object,\n    showGutter: PropTypes.bool,\n    showPrintMargin: PropTypes.bool,\n    splits: PropTypes.number,\n    style: PropTypes.object,\n    tabSize: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.array,\n    width: PropTypes.string,\n    wrapEnabled: PropTypes.bool\n  };\n\n  public static defaultProps: Partial<IDiffEditorProps> = {\n    cursorStart: 1,\n    editorProps: {},\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    focus: false,\n    fontSize: 12,\n    height: \"500px\",\n    highlightActiveLine: true,\n    maxLines: null,\n    minLines: null,\n    mode: \"\",\n    name: \"ace-editor\",\n    onLoad: null,\n    onScroll: null,\n    onPaste: null,\n    onChange: null,\n    orientation: \"beside\",\n    readOnly: false,\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    showGutter: true,\n    showPrintMargin: true,\n    splits: 2,\n    style: {},\n    tabSize: 4,\n    theme: \"github\",\n    value: [\"\", \"\"],\n    width: \"500px\",\n    wrapEnabled: true\n  };\n  constructor(props: IDiffEditorProps) {\n    super(props);\n    this.state = {\n      value: this.props.value\n    };\n    this.onChange = this.onChange.bind(this);\n    this.diff = this.diff.bind(this);\n  }\n\n  public componentDidUpdate() {\n    const { value } = this.props;\n\n    if (value !== this.state.value) {\n      this.setState({ value });\n    }\n  }\n\n  public onChange(value: any) {\n    this.setState({\n      value\n    });\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n\n  public diff() {\n    const dmp = new DiffMatchPatch();\n    const lhString = this.state.value[0];\n    const rhString = this.state.value[1];\n\n    if (lhString.length === 0 && rhString.length === 0) {\n      return [];\n    }\n\n    const diff = dmp.diff_main(lhString, rhString);\n    dmp.diff_cleanupSemantic(diff);\n\n    const diffedLines = this.generateDiffedLines(diff);\n    const codeEditorSettings = this.setCodeMarkers(diffedLines);\n    return codeEditorSettings;\n  }\n\n  public generateDiffedLines(diff: any) {\n    const C = {\n      DIFF_EQUAL: 0,\n      DIFF_DELETE: -1,\n      DIFF_INSERT: 1\n    };\n\n    const diffedLines = {\n      left: [] as any[],\n      right: [] as any[]\n    };\n\n    const cursor = {\n      left: 1,\n      right: 1\n    };\n\n    diff.forEach((chunk: any) => {\n      const chunkType = chunk[0];\n      const text = chunk[1];\n      let lines = text.split(\"\\n\").length - 1;\n\n      // diff-match-patch sometimes returns empty strings at random\n      if (text.length === 0) {\n        return;\n      }\n\n      const firstChar = text[0];\n      const lastChar = text[text.length - 1];\n      let linesToHighlight = 0;\n\n      switch (chunkType) {\n        case C.DIFF_EQUAL:\n          cursor.left += lines;\n          cursor.right += lines;\n\n          break;\n        case C.DIFF_DELETE:\n          // If the deletion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.left++;\n            lines--;\n          }\n\n          linesToHighlight = lines;\n\n          // If the deletion does not include a newline, highlight the same line on the right\n          if (linesToHighlight === 0) {\n            diffedLines.right.push({\n              startLine: cursor.right,\n              endLine: cursor.right\n            });\n          }\n\n          // If the last character is a newline, we don't want to highlight that line\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.left.push({\n            startLine: cursor.left,\n            endLine: cursor.left + linesToHighlight\n          });\n\n          cursor.left += lines;\n          break;\n        case C.DIFF_INSERT:\n          // If the insertion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.right++;\n            lines--;\n          }\n\n          linesToHighlight = lines;\n\n          // If the insertion does not include a newline, highlight the same line on the left\n          if (linesToHighlight === 0) {\n            diffedLines.left.push({\n              startLine: cursor.left,\n              endLine: cursor.left\n            });\n          }\n\n          // If the last character is a newline, we don't want to highlight that line\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.right.push({\n            startLine: cursor.right,\n            endLine: cursor.right + linesToHighlight\n          });\n\n          cursor.right += lines;\n          break;\n        default:\n          throw new Error(\"Diff type was not defined.\");\n      }\n    });\n    return diffedLines;\n  }\n\n  // Receives a collection of line numbers and iterates through them to highlight appropriately\n  // Returns an object that tells the render() method how to display the code editors\n  public setCodeMarkers(diffedLines: any = { left: [], right: [] }) {\n    const codeEditorSettings = [];\n\n    const newMarkerSet = {\n      left: [] as any[],\n      right: [] as any[]\n    };\n\n    for (let i = 0; i < diffedLines.left.length; i++) {\n      const markerObj = {\n        startRow: diffedLines.left[i].startLine - 1,\n        endRow: diffedLines.left[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.left.push(markerObj);\n    }\n\n    for (let i = 0; i < diffedLines.right.length; i++) {\n      const markerObj = {\n        startRow: diffedLines.right[i].startLine - 1,\n        endRow: diffedLines.right[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.right.push(markerObj);\n    }\n\n    codeEditorSettings[0] = newMarkerSet.left;\n    codeEditorSettings[1] = newMarkerSet.right;\n\n    return codeEditorSettings;\n  }\n\n  public render() {\n    const markers = this.diff();\n    return (\n      <SplitEditor\n        name={this.props.name}\n        className={this.props.className}\n        focus={this.props.focus}\n        orientation={this.props.orientation}\n        splits={this.props.splits}\n        mode={this.props.mode}\n        theme={this.props.theme}\n        height={this.props.height}\n        width={this.props.width}\n        fontSize={this.props.fontSize}\n        showGutter={this.props.showGutter}\n        onChange={this.onChange}\n        onPaste={this.props.onPaste}\n        onLoad={this.props.onLoad}\n        onScroll={this.props.onScroll}\n        minLines={this.props.minLines}\n        maxLines={this.props.maxLines}\n        readOnly={this.props.readOnly}\n        highlightActiveLine={this.props.highlightActiveLine}\n        showPrintMargin={this.props.showPrintMargin}\n        tabSize={this.props.tabSize}\n        cursorStart={this.props.cursorStart}\n        editorProps={this.props.editorProps}\n        style={this.props.style}\n        scrollMargin={this.props.scrollMargin}\n        setOptions={this.props.setOptions}\n        wrapEnabled={this.props.wrapEnabled}\n        enableBasicAutocompletion={this.props.enableBasicAutocompletion}\n        enableLiveAutocompletion={this.props.enableLiveAutocompletion}\n        value={this.state.value}\n        markers={markers}\n      />\n    );\n  }\n}\n"]}},"error":null,"hash":"1b157cfe04062478e6bec920e72c66ab","cacheData":{"env":{}}}